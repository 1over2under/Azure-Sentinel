{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft",
    "comments": "Solution template for AWS CloudFront"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "_solutionName": "AWS CloudFront",
    "_solutionVersion": "3.0.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-aws-cloudfront",
    "_solutionId": "[variables('solutionId')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition1": "AwsCloudfrontCcpDefinition",
    "dataConnectorTemplateNameConnectorDefinition1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition1')))]",
    "_dataConnectorContentIdConnections1": "AwsCloudfrontCcpDefinitionConnections",
    "dataConnectorTemplateNameConnections1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections1')))]",
    "dataCollectionEndpointId1": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
    "blanks": "[replace('b', 'b', '')]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "displayName": "Amazon Web Services CloudFront (via Codeless Connector Platform) (Preview)",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "AwsCloudfrontCcpDefinition",
                  "title": "Amazon Web Services CloudFront (via Codeless Connector Platform) (Preview)",
                  "logo": "amazon_web_services_Logo.svg",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "This data connector allows you to ingest AWS Network Firewall logs into Microsoft Sentinel for advanced threat detection and security monitoring. By leveraging Amazon S3 and Amazon SQS, the connector forwards network traffic logs, intrusion detection alerts, and firewall events to Microsoft Sentinel, enabling real-time analysis and correlation with other security data",
                  "graphQueriesTableName": "AWSCloudFront_AccessLog_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total access logs received",
                      "legend": "Amazon Web Services CloudFront AccessLog",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get Sample of access logs",
                      "query": "{{graphQueriesTableName}}\n | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors",
                      "value": null
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true,
                          "action": false
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "instructions": [
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 1. AWS CloudFormation Deployment \n To configure access on AWS, two templates need to be executed in AWS  \n You can find the OIDC Web Identity Provider, AWS Network Firewall Configuration Templates [Here](https://github.com/v-sreddyt/AWS_Networkfirewall/tree/main/CloudFormationTemplates) \n You can find the detailed steps for deploying the templates [Here](https://github.com/v-sreddyt/AWS_Networkfirewall/blob/main/readme.md)"
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 2. Connect new collectors \n To enable AWS S3 for Microsoft Sentinel, click the Add new collector button, fill the required information in the context pane and click on Connect."
                          }
                        },
                        {
                          "type": "DataConnectorsGrid",
                          "parameters": {
                            "mapping": [
                              {
                                "columnValue": "properties.roleArn",
                                "columnName": "Role ARN"
                              },
                              {
                                "columnValue": "properties.sqsUrls[0]",
                                "columnName": "Queue URL"
                              }
                            ],
                            "menuItems": [
                              "DeleteConnector"
                            ]
                          }
                        },
                        {
                          "type": "ContextPane",
                          "parameters": {
                            "contextPaneType": "DataConnectorsContextPane",
                            "title": "Add new controller",
                            "subtitle": "AWS S3 connector",
                            "label": "Add new collector",
                            "instructionSteps": [
                              {
                                "title": "Account details",
                                "instructions": [
                                  {
                                    "type": "Textbox",
                                    "parameters": {
                                      "label": "Role ARN",
                                      "type": "text",
                                      "name": "roleArn",
                                      "validations": {
                                        "required": true
                                      }
                                    }
                                  },
                                  {
                                    "type": "Textbox",
                                    "parameters": {
                                      "label": "Queue URL",
                                      "type": "text",
                                      "name": "queueUrl",
                                      "validations": {
                                        "required": true
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "isConnectivityCriteriasMatchSome": false
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "AWSCloudFront_DCR",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "dataCollectionEndpointId": "[variables('dataCollectionEndpointId1')]",
                "streamDeclarations": {
                  "Custom-AwsCloudfront-AccessLog": {
                    "columns": [
                      {
                        "name": "date",
                        "type": "string"
                      },
                      {
                        "name": "time",
                        "type": "string"
                      },
                      {
                        "name": "x-edge-location",
                        "type": "string"
                      },
                      {
                        "name": "sc-bytes",
                        "type": "string"
                      },
                      {
                        "name": "c-ip",
                        "type": "string"
                      },
                      {
                        "name": "cs-method",
                        "type": "string"
                      },
                      {
                        "name": "cs(Host)",
                        "type": "string"
                      },
                      {
                        "name": "cs-uri-stem",
                        "type": "string"
                      },
                      {
                        "name": "sc-status",
                        "type": "string"
                      },
                      {
                        "name": "cs(Referer)",
                        "type": "string"
                      },
                      {
                        "name": "cs(User-Agent)",
                        "type": "string"
                      },
                      {
                        "name": "cs-uri-query",
                        "type": "string"
                      },
                      {
                        "name": "cs(Cookie)",
                        "type": "string"
                      },
                      {
                        "name": "x-edge-result-type",
                        "type": "string"
                      },
                      {
                        "name": "x-edge-request-id",
                        "type": "string"
                      },
                      {
                        "name": "x-host-header",
                        "type": "string"
                      },
                      {
                        "name": "cs-protocol",
                        "type": "string"
                      },
                      {
                        "name": "cs-bytes",
                        "type": "string"
                      },
                      {
                        "name": "time-taken",
                        "type": "string"
                      },
                      {
                        "name": "x-forwarded-for",
                        "type": "string"
                      },
                      {
                        "name": "ssl-protocol",
                        "type": "string"
                      },
                      {
                        "name": "ssl-cipher",
                        "type": "string"
                      },
                      {
                        "name": "x-edge-response-result-type",
                        "type": "string"
                      },
                      {
                        "name": "cs-protocol-version",
                        "type": "string"
                      },
                      {
                        "name": "fle-status",
                        "type": "string"
                      },
                      {
                        "name": "fle-encrypted-fields",
                        "type": "string"
                      },
                      {
                        "name": "c-port",
                        "type": "string"
                      },
                      {
                        "name": "time-to-first-byte",
                        "type": "string"
                      },
                      {
                        "name": "x-edge-detailed-result-type",
                        "type": "string"
                      },
                      {
                        "name": "sc-content-type",
                        "type": "string"
                      },
                      {
                        "name": "sc-content-len",
                        "type": "string"
                      },
                      {
                        "name": "sc-range-start",
                        "type": "string"
                      },
                      {
                        "name": "sc-range-end",
                        "type": "string"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-AwsCloudfront-AccessLog"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend TimeGenerated=todatetime(strcat(tostring(['date']), 'T', tostring(['time']))) | project TimeGenerated, XEdgeLocation=tostring(['x-edge-location']), ScBytes=tostring(['sc-bytes']), CIp=tostring(['c-ip']), CsMethod=tostring(['cs-method']), CsHost=tostring(['cs(Host)']), CsUriStem=tostring(['cs-uri-stem']), ScStatus=tostring(['sc-status']), CsReferer=tostring(['cs(Referer)']), CsUserAgent=tostring(['cs(User-Agent)'], CsUriQuery=tostring(['cs-uri-query']), CsCookie=tostring(['cs(Cookie)']), XEdgeResultType=tostring(['x-edge-result-type']), XEdgeRequestId=tostring(['x-edge-request-id']), XHostHeader=tostring(['x-host-header']), CsProtocol=tostring(['cs-protocol']), CsBytes=tostring(['cs-bytes']), TimeTaken=tostring(['time-taken']), XForwardedFor=tostring(['x-forwarded-for']), SslProtocol=tostring(['ssl-protocol']), SslCipher=tostring(['ssl-cipher']), XEdgeResponseResultType=tostring(['x-edge-response-result-type']), CsProtocolVersion=tostring(['cs-protocol-version']), FleStatus=tostring(['fle-status']), FleEncryptedFields=tostring(['fle-encrypted-fields']), CPort=tostring(['c-port']), TimeToFirstByte=tostring(['time-to-first-byte']), XEdgeDetailedResultType=tostring(['x-edge-detailed-result-type']), ScContentType=tostring(['sc-content-type']), ScContentLen=tostring(['sc-content-len']), ScRangeStart=tostring(['sc-range-start']), ScRangeEnd=tostring(['sc-range-end'])",
                    "outputStream": "Custom-AWSCloudFront_AccessLog_CL"
                  }
                ]
              }
            },
            {
              "name": "AWSCloudFront_AccessLog_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "AWSCloudFront_AccessLog_CL",
                  "columns": [
                    {
                      "name": "Date",
                      "type": "string",
                      "description": "The date when the request was received by CloudFront."
                    },
                    {
                      "name": "Time",
                      "type": "string",
                      "description": "The time when the request was received by CloudFront."
                    },
                    {
                      "name": "TimeGenerated",
                      "type": "datetime",
                      "description": "The timeGenerated."
                    },
                    {
                      "name": "XEdgeLocation",
                      "type": "string",
                      "description": "The edge location that served the request."
                    },
                    {
                      "name": "ScBytes",
                      "type": "string",
                      "description": "The number of bytes returned by CloudFront to the viewer."
                    },
                    {
                      "name": "CIp",
                      "type": "string",
                      "description": "The IP address of the viewer that made the request."
                    },
                    {
                      "name": "CsMethod",
                      "type": "string",
                      "description": "The HTTP method of the viewer request."
                    },
                    {
                      "name": "CsHost",
                      "type": "string",
                      "description": "The domain name of the CloudFront distribution."
                    },
                    {
                      "name": "CsUriStem",
                      "type": "string",
                      "description": "The URI stem of the request (the part of the URI from the domain to the query string)."
                    },
                    {
                      "name": "ScStatus",
                      "type": "string",
                      "description": "The HTTP status code returned to the viewer."
                    },
                    {
                      "name": "CsReferer",
                      "type": "string",
                      "description": "The value of the HTTP referer header."
                    },
                    {
                      "name": "CsUserAgent",
                      "type": "string",
                      "description": "The user-agent header of the request."
                    },
                    {
                      "name": "CsUriQuery",
                      "type": "string",
                      "description": "The query string portion of the URI, if any."
                    },
                    {
                      "name": "CsCookie",
                      "type": "string",
                      "description": "The cookie header of the request."
                    },
                    {
                      "name": "XEdgeResultType",
                      "type": "string",
                      "description": "The result type of the request at the edge location."
                    },
                    {
                      "name": "XEdgeRequestId",
                      "type": "string",
                      "description": "A unique ID assigned to the request by CloudFront."
                    },
                    {
                      "name": "XHostHeader",
                      "type": "string",
                      "description": "The host header value received in the request."
                    },
                    {
                      "name": "CsProtocol",
                      "type": "string",
                      "description": "The protocol used by the viewer (HTTP or HTTPS)."
                    },
                    {
                      "name": "CsBytes",
                      "type": "string",
                      "description": "The number of bytes received from the viewer by CloudFront."
                    },
                    {
                      "name": "TimeTaken",
                      "type": "string",
                      "description": "The total time in seconds that CloudFront spent processing the request."
                    },
                    {
                      "name": "XForwardedFor",
                      "type": "string",
                      "description": "The X-Forwarded-For header value, if present."
                    },
                    {
                      "name": "SslProtocol",
                      "type": "string",
                      "description": "The SSL/TLS protocol version used for the request."
                    },
                    {
                      "name": "SslCipher",
                      "type": "string",
                      "description": "The SSL/TLS cipher used for the request."
                    },
                    {
                      "name": "XEdgeResponseResultType",
                      "type": "string",
                      "description": "The result type of the response from CloudFront to the viewer."
                    },
                    {
                      "name": "CsProtocolVersion",
                      "type": "string",
                      "description": "The HTTP version used in the request (e.g., HTTP/1.1, HTTP/2.0)."
                    },
                    {
                      "name": "FleStatus",
                      "type": "string",
                      "description": "The status of Field-Level Encryption, if enabled."
                    },
                    {
                      "name": "FleEncryptedFields",
                      "type": "string",
                      "description": "The list of encrypted fields, if Field-Level Encryption is enabled."
                    },
                    {
                      "name": "CPort",
                      "type": "string",
                      "description": "The port number of the client making the request."
                    },
                    {
                      "name": "TimeToFirstByte",
                      "type": "string",
                      "description": "The amount of time (in seconds) from when CloudFront receives the request to when it starts sending the response."
                    },
                    {
                      "name": "XEdgeDetailedResultType",
                      "type": "string",
                      "description": "A more detailed result type for the request."
                    },
                    {
                      "name": "ScContentType",
                      "type": "string",
                      "description": "The content type of the response returned to the viewer."
                    },
                    {
                      "name": "ScContentLen",
                      "type": "string",
                      "description": "The length of the response content. Might be '-' if not applicable."
                    },
                    {
                      "name": "ScRangeStart",
                      "type": "string",
                      "description": "The start of the range requested by the viewer, if present."
                    },
                    {
                      "name": "ScRangeEnd",
                      "type": "string",
                      "description": "The end of the range requested by the viewer, if present."
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "AwsCloudfrontCcpDefinition",
          "title": "Amazon Web Services CloudFront (via Codeless Connector Platform) (Preview)",
          "logo": "amazon_web_services_Logo.svg",
          "publisher": "Microsoft",
          "descriptionMarkdown": "This data connector allows you to ingest AWS Network Firewall logs into Microsoft Sentinel for advanced threat detection and security monitoring. By leveraging Amazon S3 and Amazon SQS, the connector forwards network traffic logs, intrusion detection alerts, and firewall events to Microsoft Sentinel, enabling real-time analysis and correlation with other security data",
          "graphQueriesTableName": "AWSCloudFront_AccessLog_CL",
          "graphQueries": [
            {
              "metricName": "Total access logs received",
              "legend": "Amazon Web Services CloudFront AccessLog",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "Get Sample of access logs",
              "query": "{{graphQueriesTableName}}\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors",
              "value": null
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true,
                  "action": false
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "instructions": [
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 1. AWS CloudFormation Deployment \n To configure access on AWS, two templates need to be executed in AWS  \n You can find the OIDC Web Identity Provider, AWS Network Firewall Configuration Templates [Here](https://github.com/v-sreddyt/AWS_Networkfirewall/tree/main/CloudFormationTemplates) \n You can find the detailed steps for deploying the templates [Here](https://github.com/v-sreddyt/AWS_Networkfirewall/blob/main/readme.md)"
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 2. Connect new collectors \n To enable AWS S3 for Microsoft Sentinel, click the Add new collector button, fill the required information in the context pane and click on Connect."
                  }
                },
                {
                  "type": "DataConnectorsGrid",
                  "parameters": {
                    "mapping": [
                      {
                        "columnValue": "properties.roleArn",
                        "columnName": "Role ARN"
                      },
                      {
                        "columnValue": "properties.sqsUrls[0]",
                        "columnName": "Queue URL"
                      }
                    ],
                    "menuItems": [
                      "DeleteConnector"
                    ]
                  }
                },
                {
                  "type": "ContextPane",
                  "parameters": {
                    "contextPaneType": "DataConnectorsContextPane",
                    "title": "Add new controller",
                    "subtitle": "AWS S3 connector",
                    "label": "Add new collector",
                    "instructionSteps": [
                      {
                        "title": "Account details",
                        "instructions": [
                          {
                            "type": "Textbox",
                            "parameters": {
                              "label": "Role ARN",
                              "type": "text",
                              "name": "roleArn",
                              "validations": {
                                "required": true
                              }
                            }
                          },
                          {
                            "type": "Textbox",
                            "parameters": {
                              "label": "Queue URL",
                              "type": "text",
                              "name": "queueUrl",
                              "validations": {
                                "required": true
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "isConnectivityCriteriasMatchSome": false
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Microsoft"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections1')]",
        "displayName": "Amazon Web Services CloudFront (via Codeless Connector Platform) (Preview)",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "guidValue": {
              "defaultValue": "[[newGuid()]",
              "type": "string"
            },
            "innerWorkspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "string"
            },
            "connectorDefinitionName": {
              "defaultValue": "Amazon Web Services CloudFront (via Codeless Connector Platform) (Preview)",
              "type": "string",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "string"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            },
            "roleArn": {
              "defaultValue": "roleArn",
              "type": "string",
              "minLength": 1
            },
            "queueUrl": {
              "defaultValue": "queueUrl",
              "type": "string",
              "minLength": 1
            }
          },
          "variables": {
            "_dataConnectorContentIdConnections1": "[variables('_dataConnectorContentIdConnections1')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'AwsCloudfront Access Log', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "AmazonWebServicesS3",
              "properties": {
                "connectorDefinitionName": "AwsCloudfrontCcpDefinition",
                "destinationTable": "AWSCloudFront_AccessLog_CL",
                "dataTypes": {
                  "logs": {
                    "state": "enabled"
                  }
                },
                "dcrConfig": {
                  "streamName": "Custom-AwsCloudfront-AccessLog",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "dataFormat": {
                  "Format": "Json",
                  "IsCompressed": true,
                  "compressType": "Gzip"
                },
                "roleArn": "[[parameters('roleArn')]",
                "sqsUrls": [
                  "[[parameters('queueUrl')]"
                ]
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "AWS CloudFront",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/AWS%20CloudFront/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The Amazon Web Services CloudFront for Microsoft Sentinel allows you to enable Security monitoring of AWS services by allowing ingestion of logs from the AWS S3Bucket, SQS Queue. <p><span style='color:red; font-weight:bold;'>NOTE:</span> Microsoft recommends installation of Amazon Web Services NetworkFirewall (via Codeless Connector Platform). This connector is build on the Codeless Connector Platform (CCP), which uses the Log Ingestion API, which replaces ingestion via the <a href='https://learn.microsoft.com/en-us/azure/azure-monitor/logs/custom-logs-migrate' style='color:#1890F1;'>deprecated HTTP Data Collector API</a>. CCP-based data connectors also support <a href='https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/data-collection-rule-overview' style='color:#1890F1;'>Data Collection Rules</a> (DCRs) offering transformations and enrichment.</p></p>\n<p><strong>Data Connectors:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Aws.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "AWS CloudFront",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            }
          ]
        },
        "firstPublishDate": "2025-03-20",
        "providers": [
          "Amazon Web Services"
        ],
        "categories": {
          "domains": [
            "Security - Cloud Security"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
