{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "RFI-Playbook-Alert-Importer",
            "type": "string"
        },
        "active_directory_security_group_id": {
            "type": "String",
            "metadata": {
                "description": "Enter value for active_directory_security_group_id"
            }
        },
        "active_directory_domain": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Enter value for active_directory_domain"
            }
        },
        "RFICustomConnector": {
            "defaultValue": "RFI-CustomConnector-0-2-0",
            "type": "string",
            "metadata": {
                "description": "Name of the logic app connector which performs Recorded Future Communication. Normaly this dont change from RFI-CustomConnector-0-2-0"
            }
        }
    },
    "variables": {
        "Rfi-Customconnector-0-2-0ConnectionName": "RFI-CustomConnector-0-2-0",
        "AzureadConnectionName": "[concat('Azuread-', parameters('PlaybookName'))]",
        "AzureadipConnectionName": "[concat('Azureadip-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "active_directory_security_group_id": {
                            "defaultValue": "[parameters('active_directory_security_group_id')]",
                            "type": "String"
                        },
                        "active_directory_domain": {
                            "defaultValue": "[parameters('active_directory_domain')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "interval": 15,
                                "frequency": "Minute"
                            },
                            "evaluatedRecurrence": {
                                "interval": 15,
                                "frequency": "Minute"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Playbook_Alerts_-_Search_for_novel_identity_exposures": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['rfi-customconnector-0-2-0']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "lookback_days": 50,
                                    "priorities": [
                                        "High"
                                    ],
                                    "max_lookback_days": 50
                                },
                                "path": "/playbook-alerts/search"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Playbook_Alerts_-_Search_for_novel_identity_exposures')?['pba_items']",
                            "actions": {
                                "Get_User_-_Check_if_the_user_exists_in_Active_Directory": {
                                    "runAfter": {
                                        "If_Active_Directory_domain_parameter_is_not_null_and_not_empty": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/v1.0/users/@{encodeURIComponent(variables('user_principal_name'))}"
                                    }
                                },
                                "Add_risky_user_to_Active_Directory_security_group_for_users_at_risk": {
                                    "runAfter": {
                                        "Get_User_-_Check_if_the_user_exists_in_Active_Directory": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "@@odata.id": "@body('Get_User_-_Check_if_the_user_exists_in_Active_Directory')?['id']"
                                        },
                                        "path": "/v1.0/groups/@{encodeURIComponent(parameters('active_directory_security_group_id'))}/members/$ref"
                                    }
                                },
                                "Get_risky_user": {
                                    "runAfter": {
                                        "Get_User_-_Check_if_the_user_exists_in_Active_Directory": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureadip']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/beta/riskyUsers/@{encodeURIComponent(body('Get_User_-_Check_if_the_user_exists_in_Active_Directory')?['id'])}"
                                    }
                                },
                                "Confirm_a_risky_user_as_compromised": {
                                    "runAfter": {
                                        "Get_risky_user": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureadip']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "userIds": [
                                                "@body('Get_risky_user')?['id']"
                                            ]
                                        },
                                        "path": "/beta/riskyUsers/confirmCompromised"
                                    }
                                },
                                "Playbook_Alerts_-_Update_Playbook_Alert_-_If_user_not_found": {
                                    "runAfter": {
                                        "Get_User_-_Check_if_the_user_exists_in_Active_Directory": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['rfi-customconnector-0-2-0']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "body": {
                                            "alert_id": "@item()?['alert_id']",
                                            "log_entry": "User not found. Might be false positive. Dismissed",
                                            "status": "Dismissed"
                                        },
                                        "path": "/playbook-alerts/update"
                                    }
                                },
                                "If_Active_Directory_domain_parameter_is_not_null_and_not_empty": {
                                    "actions": {
                                        "Set_Active_Directory_user_principal_name_to_user_email's_username_+_AD_domain": {
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "user_principal_name",
                                                "value": "@concat(split(item()?['identity'], '@')[0], '@', parameters('active_directory_domain'))"
                                            }
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "Set_Active_Directory_user_principal_name_to_user's_email": {
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "user_principal_name",
                                                    "value": "@item()?['identity']"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@parameters('active_directory_domain')",
                                                        "@null"
                                                    ]
                                                }
                                            },
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@parameters('active_directory_domain')",
                                                        ""
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Playbook_Alerts_-_Update_Playbook_Alert": {
                                    "runAfter": {
                                        "Add_risky_user_to_Active_Directory_security_group_for_users_at_risk": [
                                            "Succeeded"
                                        ],
                                        "Confirm_a_risky_user_as_compromised": [
                                            "Succeeded",
                                            "Skipped",
                                            "Failed"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['rfi-customconnector-0-2-0']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "body": {
                                            "alert_id": "@item()?['alert_id']",
                                            "log_entry": "User found. Placed into security group. Confirmed as risky user if present in that list.",
                                            "status": "Resolved"
                                        },
                                        "path": "/playbook-alerts/update"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_user_principal_name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_user_principal_name": {
                            "runAfter": {
                                "Playbook_Alerts_-_Search_for_novel_identity_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "user_principal_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "rfi-customconnector-0-2-0": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Rfi-Customconnector-0-2-0ConnectionName'))]",
                                "connectionName": "[variables('Rfi-Customconnector-0-2-0ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('RFICustomConnector'))]"
                            },
                            "azuread": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                                "connectionName": "[variables('AzureadConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                            },
                            "azureadip": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureadipConnectionName'))]",
                                "connectionName": "[variables('AzureadipConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureadip')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('Rfi-Customconnector-0-2-0ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureadipConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Rfi-Customconnector-0-2-0ConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('Rfi-Customconnector-0-2-0ConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('RFICustomConnector'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureadConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureadConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureadipConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureadipConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureadip')]"
                }
            }
        }
    ]
}
