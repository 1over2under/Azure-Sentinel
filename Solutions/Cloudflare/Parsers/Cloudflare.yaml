id: fa3baaab-10b6-452c-9d07-76aa3f1c592e
Function:
  Title: Parser for Cloudflare
  Version: '1.0.0'
  LastUpdated: '2023-08-23'
Category: Microsoft Sentinel Parser
FunctionName: Cloudflare
FunctionAlias: Cloudflare
FunctionQuery: |
  let Cloudflare_view = view() {
    Cloudflare_CL
    | extend
        ClientDeviceType = column_ifexists("ClientDeviceType_s", column_ifexists("Source_s", "")),
        TlsCipher = column_ifexists("ClientSSLCipher_s", column_ifexists("ClientTlsCipher_s", "")),
        TlsVersion = column_ifexists("ClientSSLProtocol_s", column_ifexists("ClientTlsProtocol_s", "")),
        DvcAction = column_ifexists("FirewallMatchesActions_s", column_ifexists("Event_s", column_ifexists("Action_s", ""))),
        NetworkRuleName = column_ifexists("FirewallMatchesRuleIDs_s", column_ifexists("RuleID_s", "")),
        SrcBytes = column_ifexists("ClientRequestBytes_d", column_ifexists("ClientBytes_d", "")),
        SrcPortNumber = column_ifexists("ClientSrcPort_d", column_ifexists("ClientPort_d", "")),
        DstBytes = column_ifexists("EdgeResponseBytes_d", column_ifexists("OriginBytes_d", "")),
        BotScore = column_ifexists("BotScore_d", ""),
        BotScoreSrc = column_ifexists("BotScoreSrc_s", ""),
        CacheCacheStatus = column_ifexists("CacheCacheStatus_s", ""),
        CacheResponseBytes = column_ifexists("CacheResponseBytes_d", ""),
        CacheResponseStatus = column_ifexists("CacheResponseStatus_d", ""),
        CacheTieredFill = column_ifexists("CacheTieredFill_b", ""),
        ClientASN = column_ifexists("ClientASN_d", ""),
        SrcGeoCountry = column_ifexists("ClientCountry_s", ""),
        SrcIpAddr = column_ifexists("ClientIP_s", ""),
        ClientIPClass = column_ifexists("ClientIPClass_s", ""),
        HttpRequestHeaderHost = column_ifexists("ClientRequestHost_s", ""),
        HttpRequestMethod = column_ifexists("ClientRequestMethod_s", ""),
        ClientRequestPath = column_ifexists("ClientRequestPath_s", ""),
        ClientRequestProtocol = column_ifexists("ClientRequestProtocol_s", ""),
        HttpReferrerOriginal = column_ifexists("ClientRequestReferer_s", ""),
        ClientRequestURI = column_ifexists("ClientRequestURI_s", ""),
        HttpUserAgentOriginal = column_ifexists("ClientRequestUserAgent_s", ""),
        ClientXRequestedWith = column_ifexists("ClientXRequestedWith_s", ""),
        EdgeColoCode = column_ifexists("EdgeColoCode_s", ""),
        EdgeColoID = column_ifexists("EdgeColoID_d", ""),
        EdgeEndTimestamp = column_ifexists("EdgeEndTimestamp_t", ""),
        EdgePathingOp = column_ifexists("EdgePathingOp_s", ""),
        EdgePathingSrc = column_ifexists("EdgePathingSrc_s", ""),
        EdgePathingStatus = column_ifexists("EdgePathingStatus_s", ""),
        EdgeRateLimitAction = column_ifexists("EdgeRateLimitAction_s", ""),
        EdgeRateLimitID = column_ifexists("EdgeRateLimitID_d", ""),
        EdgeRequestHost = column_ifexists("EdgeRequestHost_s", ""),
        EdgeResponseCompressionRatio = column_ifexists("EdgeResponseCompressionRatio_d", ""),
        HttpContentType = column_ifexists("EdgeResponseContentType_s", ""),
        EdgeResponseStatus = column_ifexists("EdgeResponseStatus_d", ""),
        EdgeServerIP = column_ifexists("EdgeServerIP_s", ""),
        EdgeStartTimestamp = column_ifexists("EdgeStartTimestamp_t", ""),
        FirewallMatchesSources = column_ifexists("FirewallMatchesSources_s", ""),
        DstIpAddr = column_ifexists("OriginIP_s", ""),
        OriginResponseBytes = column_ifexists("OriginResponseBytes_d", ""),
        OriginResponseHTTPExpires = column_ifexists("OriginResponseHTTPExpires_s", ""),
        OriginResponseHTTPLastModified = column_ifexists("OriginResponseHTTPLastModified_s", ""),
        HttpStatusCode = column_ifexists("OriginResponseStatus_d", ""),
        OriginResponseTime = column_ifexists("OriginResponseTime_d", ""),
        OriginSSLProtocol = column_ifexists("OriginSSLProtocol_s", ""),
        ParentRayID = column_ifexists("ParentRayID_s", ""),
        RayID = column_ifexists("RayID_s", ""),
        SecurityLevel = column_ifexists("SecurityLevel_s", ""),
        WAFAction = column_ifexists("WAFAction_s", ""),
        WAFFlags = column_ifexists("WAFFlags_s", ""),
        WAFMatchedVar = column_ifexists("WAFMatchedVar_s", ""),
        WAFProfile = column_ifexists("WAFProfile_s", ""),
        WAFRuleID = column_ifexists("WAFRuleID_s", ""),
        WAFRuleMessage = column_ifexists("WAFRuleMessage_s", ""),
        WorkerCPUTime = column_ifexists("WorkerCPUTime_d", ""),
        WorkerStatus = column_ifexists("WorkerStatus_s", ""),
        WorkerSubrequest = column_ifexists("WorkerSubrequest_b", ""),
        WorkerSubrequestCount = column_ifexists("WorkerSubrequestCount_d", ""),
        ZoneID = column_ifexists("ZoneID_d", ""),
        Application = column_ifexists("Application_s", ""),
        ClientMatchedIpFirewall = column_ifexists("ClientMatchedIpFirewall_s", ""),
        NetworkProtocol = column_ifexists("ClientProto_s", ""),
        ClientTcpRtt = column_ifexists("ClientTcpRtt_d", ""),
        ClientTlsClientHelloServerName = column_ifexists("ClientTlsClientHelloServerName_s", ""),
        ClientTlsStatus = column_ifexists("ClientTlsStatus_s", ""),
        ColoCode = column_ifexists("ColoCode_s", ""),
        ConnectTimestamp = column_ifexists("ConnectTimestamp_t", ""),
        DisconnectTimestamp = column_ifexists("DisconnectTimestamp_t", ""),
        IpFirewall = column_ifexists("IpFirewall_b", ""),
        DstPortNumber = column_ifexists("OriginPort_d", ""),
        OriginProto = column_ifexists("OriginProto_s", ""),
        OriginTcpRtt = column_ifexists("OriginTcpRtt_d", ""),
        OriginTlsCipher = column_ifexists("OriginTlsCipher_s", ""),
        OriginTlsFingerprint = column_ifexists("OriginTlsFingerprint_s", ""),
        OriginTlsMode = column_ifexists("OriginTlsMode_s", ""),
        OriginTlsProtocol = column_ifexists("OriginTlsProtocol_s", ""),
        OriginTlsStatus = column_ifexists("OriginTlsStatus_s", ""),
        ProxyProtocol = column_ifexists("ProxyProtocol_s", ""),
        EventResult = column_ifexists("Status_d", ""),
        Timestamp = column_ifexists("Timestamp_t", ""),
        ClientASNDescription = column_ifexists("ClientASNDescription_s", ""),
        ClientRefererHost = column_ifexists("ClientRefererHost_s", ""),
        ClientRefererPath = column_ifexists("ClientRefererPath_s", ""),
        ClientRefererQuery = column_ifexists("ClientRefererQuery_s", ""),
        ClientRefererScheme = column_ifexists("ClientRefererScheme_s", ""),
        ClientRequestQuery = column_ifexists("ClientRequestQuery_s", ""),
        ClientRequestScheme = column_ifexists("ClientRequestScheme_s", ""),
        Datetime = column_ifexists("Datetime_t", ""),
        EventSubType = column_ifexists("Kind_s", ""),
        MatchIndex = column_ifexists("MatchIndex_d", ""),
        OriginatorRayID = column_ifexists("OriginatorRayID_s", "")
    };
    let Cloudflarev2_view = view() {
    CloudflareV2_CL
    | extend
        ClientDeviceType = column_ifexists("ClientDeviceType", column_ifexists("Source", "")),
        TlsCipher = column_ifexists("ClientSSLCipher", column_ifexists("ClientTlsCipher", "")),
        TlsVersion = column_ifexists("ClientSSLProtocol", column_ifexists("ClientTlsProtocol", "")),
        DvcAction = column_ifexists("FirewallMatchesActions", column_ifexists("Event", column_ifexists("Action", ""))),
        NetworkRuleName = column_ifexists("FirewallMatchesRuleIDs", column_ifexists("RuleID", "")),
        SrcBytes = column_ifexists("ClientRequestBytes", column_ifexists("ClientBytes", "")),
        SrcPortNumber = column_ifexists("ClientSrcPort", column_ifexists("ClientPort", "")),
        DstBytes = column_ifexists("EdgeResponseBytes", column_ifexists("OriginBytes", "")),
        BotScore = column_ifexists("BotScore", ""),
        BotScoreSrc = column_ifexists("BotScoreSrc", ""),
        CacheCacheStatus = column_ifexists("CacheCacheStatus", ""),
        CacheResponseBytes = column_ifexists("CacheResponseBytes", ""),
        CacheResponseStatus = column_ifexists("CacheResponseStatus", ""),
        CacheTieredFill = column_ifexists("CacheTieredFill", ""),
        ClientASN = column_ifexists("ClientASN", ""),
        SrcGeoCountry = column_ifexists("ClientCountry", ""),
        SrcIpAddr = column_ifexists("ClientIP", ""),
        ClientIPClass = column_ifexists("ClientIPClass", ""),
        HttpRequestHeaderHost = column_ifexists("ClientRequestHost", ""),
        HttpRequestMethod = column_ifexists("ClientRequestMethod", ""),
        ClientRequestPath = column_ifexists("ClientRequestPath", ""),
        ClientRequestProtocol = column_ifexists("ClientRequestProtocol", ""),
        HttpReferrerOriginal = column_ifexists("ClientRequestReferer", ""),
        ClientRequestURI = column_ifexists("ClientRequestURI", ""),
        HttpUserAgentOriginal = column_ifexists("ClientRequestUserAgent", ""),
        ClientXRequestedWith = column_ifexists("ClientXRequestedWith", ""),
        EdgeColoCode = column_ifexists("EdgeColoCode", ""),
        EdgeColoID = column_ifexists("EdgeColoID", ""),
        EdgeEndTimestamp = column_ifexists("EdgeEndTimestamp", ""),
        EdgePathingOp = column_ifexists("EdgePathingOp", ""),
        EdgePathingSrc = column_ifexists("EdgePathingSrc", ""),
        EdgePathingStatus = column_ifexists("EdgePathingStatus", ""),
        EdgeRateLimitAction = column_ifexists("EdgeRateLimitAction", ""),
        EdgeRateLimitID = column_ifexists("EdgeRateLimitID", ""),
        EdgeRequestHost = column_ifexists("EdgeRequestHost", ""),
        EdgeResponseCompressionRatio = column_ifexists("EdgeResponseCompressionRatio", ""),
        HttpContentType = column_ifexists("EdgeResponseContentType", ""),
        EdgeResponseStatus = column_ifexists("EdgeResponseStatus", ""),
        EdgeServerIP = column_ifexists("EdgeServerIP", ""),
        EdgeStartTimestamp = column_ifexists("EdgeStartTimestamp", ""),
        FirewallMatchesSources = column_ifexists("FirewallMatchesSources", ""),
        DstIpAddr = column_ifexists("OriginIP", ""),
        OriginResponseBytes = column_ifexists("OriginResponseBytes", ""),
        OriginResponseHTTPExpires = column_ifexists("OriginResponseHTTPExpires", ""),
        OriginResponseHTTPLastModified = column_ifexists("OriginResponseHTTPLastModified", ""),
        HttpStatusCode = column_ifexists("OriginResponseStatus", ""),
        OriginResponseTime = column_ifexists("OriginResponseTime", ""),
        OriginSSLProtocol = column_ifexists("OriginSSLProtocol", ""),
        ParentRayID = column_ifexists("ParentRayID", ""),
        RayID = column_ifexists("RayID", ""),
        SecurityLevel = column_ifexists("SecurityLevel", ""),
        WAFAction = column_ifexists("WAFAction", ""),
        WAFFlags = column_ifexists("WAFFlags", ""),
        WAFMatchedVar = column_ifexists("WAFMatchedVar", ""),
        WAFProfile = column_ifexists("WAFProfile", ""),
        WAFRuleID = column_ifexists("WAFRuleID", ""),
        WAFRuleMessage = column_ifexists("WAFRuleMessage", ""),
        WorkerCPUTime = column_ifexists("WorkerCPUTime", ""),
        WorkerStatus = column_ifexists("WorkerStatus", ""),
        WorkerSubrequest = column_ifexists("WorkerSubrequest", ""),
        WorkerSubrequestCount = column_ifexists("WorkerSubrequestCount", ""),
        ZoneID = column_ifexists("ZoneID", ""),
        Application = column_ifexists("Application", ""),
        ClientMatchedIpFirewall = column_ifexists("ClientMatchedIpFirewall", ""),
        NetworkProtocol = column_ifexists("ClientProto", ""),
        ClientTcpRtt = column_ifexists("ClientTcpRtt", ""),
        ClientTlsClientHelloServerName = column_ifexists("ClientTlsClientHelloServerName", ""),
        ClientTlsStatus = column_ifexists("ClientTlsStatus", ""),
        ColoCode = column_ifexists("ColoCode", ""),
        ConnectTimestamp = column_ifexists("ConnectTimestamp", ""),
        DisconnectTimestamp = column_ifexists("DisconnectTimestamp", ""),
        IpFirewall = column_ifexists("IpFirewall", ""),
        DstPortNumber = column_ifexists("OriginPort", ""),
        OriginProto = column_ifexists("OriginProto", ""),
        OriginTcpRtt = column_ifexists("OriginTcpRtt", ""),
        OriginTlsCipher = column_ifexists("OriginTlsCipher", ""),
        OriginTlsFingerprint = column_ifexists("OriginTlsFingerprint", ""),
        OriginTlsMode = column_ifexists("OriginTlsMode", ""),
        OriginTlsProtocol = column_ifexists("OriginTlsProtocol", ""),
        OriginTlsStatus = column_ifexists("OriginTlsStatus", ""),
        ProxyProtocol = column_ifexists("ProxyProtocol", ""),
        EventResult = column_ifexists("Status", ""),
        Timestamp = column_ifexists("Timestamp", ""),
        ClientASNDescription = column_ifexists("ClientASNDescription", ""),
        ClientRefererHost = column_ifexists("ClientRefererHost", ""),
        ClientRefererPath = column_ifexists("ClientRefererPath", ""),
        ClientRefererQuery = column_ifexists("ClientRefererQuery", ""),
        ClientRefererScheme = column_ifexists("ClientRefererScheme", ""),
        ClientRequestQuery = column_ifexists("ClientRequestQuery", ""),
        ClientRequestScheme = column_ifexists("ClientRequestScheme", ""),
        Datetime = column_ifexists("Datetime", ""),
        EventSubType = column_ifexists("Kind", ""),
        MatchIndex = column_ifexists("MatchIndex", ""),
        OriginatorRayID = column_ifexists("OriginatorRayID", "")
    };
    union isfuzzy=true (Cloudflare_view), (Cloudflarev2_view)
    | project SrcBytes, SrcPortNumber, DstBytes, BotScore, BotScoreSrc, CacheCacheStatus, CacheResponseBytes, CacheResponseStatus, CacheTieredFill, ClientASN, SrcGeoCountry, SrcIpAddr, ClientIPClass, HttpRequestHeaderHost, HttpRequestMethod, ClientRequestPath, ClientRequestProtocol, HttpReferrerOriginal, ClientRequestURI, HttpUserAgentOriginal, ClientXRequestedWith, EdgeColoCode, EdgeColoID, EdgeEndTimestamp, EdgePathingOp, EdgePathingSrc, EdgePathingStatus, EdgeRateLimitAction, EdgeRateLimitID, EdgeRequestHost, EdgeResponseCompressionRatio, HttpContentType, EdgeResponseStatus, EdgeServerIP, EdgeStartTimestamp, FirewallMatchesSources, DstIpAddr, OriginResponseBytes, OriginResponseHTTPExpires, OriginResponseHTTPLastModified, HttpStatusCode, OriginResponseTime, OriginSSLProtocol, ParentRayID, RayID, SecurityLevel, WAFAction, WAFFlags, WAFMatchedVar, WAFProfile, WAFRuleID, WAFRuleMessage, WorkerCPUTime, WorkerStatus, WorkerSubrequest, WorkerSubrequestCount, ZoneID, Application, ClientMatchedIpFirewall, NetworkProtocol, ClientTcpRtt, ClientTlsClientHelloServerName, ClientTlsStatus, ColoCode, ConnectTimestamp, DisconnectTimestamp, IpFirewall, DstPortNumber, OriginProto, OriginTcpRtt, OriginTlsCipher, OriginTlsFingerprint, OriginTlsMode, OriginTlsProtocol, OriginTlsStatus, ProxyProtocol, EventResult, Timestamp, ClientASNDescription, ClientRefererHost, ClientRefererPath, ClientRefererQuery, ClientRefererScheme, ClientRequestQuery, ClientRequestScheme, Datetime, EventSubType, MatchIndex, OriginatorRayID